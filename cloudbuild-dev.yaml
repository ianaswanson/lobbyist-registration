# Cloud Build Configuration - Development Environment
# Auto-deploys on push to 'develop' branch
# No approval required - for rapid iteration

substitutions:
  _SERVICE_NAME: lobbyist-registration-dev
  _REGION: us-west1
  _ENVIRONMENT: development

steps:
  # Step 1: Install dependencies
  - name: 'node:20'
    id: 'install-deps'
    entrypoint: npm
    args: ['ci']
    waitFor: ['-']

  # Step 2: Type checking
  - name: 'node:20'
    id: 'type-check'
    entrypoint: npm
    args: ['run', 'build']
    env:
      - 'NODE_ENV=production'
    waitFor: ['install-deps']

  # Step 3: Security scan (warn only, don't fail build)
  - name: 'node:20'
    id: 'security-scan'
    entrypoint: npm
    args: ['audit', '--audit-level=moderate']
    waitFor: ['install-deps']
    # Allow vulnerabilities in dev (will be strict in prod)

  # Step 4: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args:
      - 'build'
      - '-f'
      - 'Dockerfile'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}:$SHORT_SHA'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}:latest'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}:build-$BUILD_ID'
      - '--build-arg'
      - 'NODE_ENV=production'
      - '.'
    waitFor: ['type-check', 'security-scan']

  # Step 5: Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}'
    waitFor: ['build-image']

  # Step 6: Deploy to Cloud Run (development)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-service'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}:$SHORT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'NODE_ENV=production,ENVIRONMENT=${_ENVIRONMENT},NEXTAUTH_URL=https://${_SERVICE_NAME}-zzp44w3snq-uw.a.run.app'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '300'
    waitFor: ['push-image']

  # Step 7: Verify deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'verify-deployment'
    entrypoint: bash
    args:
      - '-c'
      - |
        SERVICE_URL=$$(gcloud run services describe ${_SERVICE_NAME} \
          --region ${_REGION} \
          --format 'value(status.url)')

        echo "Deployment URL: $$SERVICE_URL"
        echo "Checking health endpoint..."

        # Wait 10 seconds for service to be ready
        sleep 10

        # Check if service responds (allow failure in dev)
        curl -f -s -o /dev/null "$$SERVICE_URL" || echo "Warning: Service health check failed"

        echo "âœ… Development deployment complete!"
        echo "View service at: $$SERVICE_URL"
    waitFor: ['deploy-service']

# Build configuration
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true

# Store images
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}:$SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}:latest'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/lobbyist-registry/${_SERVICE_NAME}:build-$BUILD_ID'

# Timeout after 20 minutes
timeout: '1200s'

# Tags for organization
tags:
  - 'environment-dev'
  - 'auto-deploy'
  - 'lobbyist-registration'
